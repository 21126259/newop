# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#

name: Build OpenWrt

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'Enable SSH debugging (true/false)'
        required: false
        default: 'false'

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  UPLOAD_RELEASE: false
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install ngrok
      run: |
        curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
        echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list
        sudo apt update
        sudo apt install -y ngrok

    - name: Configure ngrok
      run: |
        ngrok config add-authtoken ${{ secrets.NGROK_AUTH_TOKEN }}

    - name: Start ngrok tunnel
      run: |
        nohup ngrok tcp 22 > ngrok.log 2>&1 &
        sleep 5
        curl -s http://127.0.0.1:4040/api/tunnels | jq -r '.tunnels[0].public_url'

    - name: Enable SSH
      run: |
        sudo apt install -y openssh-server
        sudo systemctl start ssh
        sudo systemctl enable ssh
        echo "root:$(openssl rand -base64 12)" | sudo chpasswd


    - name: 启用公网 SSH（ngrok）
      if: github.event.inputs.ssh == 'true'
      run: |
        curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
        echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list
        sudo apt update && sudo apt install -y ngrok
        ngrok config add-authtoken ${{ secrets.NGROK_AUTH_TOKEN }}
        ngrok tcp 22 --log=stdout > ngrok.log &
        sleep 10
        echo "🌍 公网 SSH 访问:"
        curl -s localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url' | sed 's/tcp:\/\//ssh root@/'


    - name: 保持 SSH 连接活跃
      if: github.event.inputs.ssh == 'true'
      run: sleep 21600  # 6小时（最大限制）

    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Load custom feeds
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "status=success" >> "$GITHUB_OUTPUT"

    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_FIRMWARE == 'true'
      with:
        name: OpenWrt_firmware
        path: openwrt/bin/targets/**/*

    - name: 结束 SSH 连接
      if: github.event.inputs.ssh == 'true'
      run: |
        echo "✅ SSH 调试完成，Workflow 继续执行..."
